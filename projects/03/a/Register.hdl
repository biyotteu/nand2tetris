// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Register.hdl
/**
 * 16-bit register:
 * If load is asserted, the register's value is set to in;
 * Otherwise, the register maintains its current value:
 * if (load(t)) out(t+1) = int(t), else out(t+1) = out(t)
 */
CHIP Register {
    IN in[16], load;
    OUT out[16];

    PARTS:
    Mux(a=dff0,b=in[0],sel=load,out=mux0);
    Mux(a=dff1,b=in[1],sel=load,out=mux1);
    Mux(a=dff2,b=in[2],sel=load,out=mux2);
    Mux(a=dff3,b=in[3],sel=load,out=mux3);
    Mux(a=dff4,b=in[4],sel=load,out=mux4);
    Mux(a=dff5,b=in[5],sel=load,out=mux5);
    Mux(a=dff6,b=in[6],sel=load,out=mux6);
    Mux(a=dff7,b=in[7],sel=load,out=mux7);
    Mux(a=dff8,b=in[8],sel=load,out=mux8);
    Mux(a=dff9,b=in[9],sel=load,out=mux9);
    Mux(a=dff10,b=in[10],sel=load,out=mux10);
    Mux(a=dff11,b=in[11],sel=load,out=mux11);
    Mux(a=dff12,b=in[12],sel=load,out=mux12);
    Mux(a=dff13,b=in[13],sel=load,out=mux13);
    Mux(a=dff14,b=in[14],sel=load,out=mux14);
    Mux(a=dff15,b=in[15],sel=load,out=mux15);
    DFF(in=mux0,out=dff0,out=out[0]);
    DFF(in=mux1,out=dff1,out=out[1]);
    DFF(in=mux2,out=dff2,out=out[2]);
    DFF(in=mux3,out=dff3,out=out[3]);
    DFF(in=mux4,out=dff4,out=out[4]);
    DFF(in=mux5,out=dff5,out=out[5]);
    DFF(in=mux6,out=dff6,out=out[6]);
    DFF(in=mux7,out=dff7,out=out[7]);
    DFF(in=mux8,out=dff8,out=out[8]);
    DFF(in=mux9,out=dff9,out=out[9]);
    DFF(in=mux10,out=dff10,out=out[10]);
    DFF(in=mux11,out=dff11,out=out[11]);
    DFF(in=mux12,out=dff12,out=out[12]);
    DFF(in=mux13,out=dff13,out=out[13]);
    DFF(in=mux14,out=dff14,out=out[14]);
    DFF(in=mux15,out=dff15,out=out[15]);
}
